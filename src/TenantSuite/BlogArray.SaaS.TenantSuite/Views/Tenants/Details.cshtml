@model ApplicationListViewModel

@{
    string title = $"{Model.DisplayName} ({Model.ClientId})";
    ViewData["Title"] = title + " tenant details";
}

<div class="card">
    <div class="card-header">
        <h3 class="mb-1">
            <img height="34" alt="profile icon" class="flex-shrink-0 me-1 rounded" loading="lazy" id="faviconImage" src="@Model.Icon" />
            @title
        </h3>
        <nav aria-label="breadcrumb mb-0 mbe-0 form-text">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item">
                    <a asp-action="Index">
                        All tenants
                    </a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">@title</li>
            </ol>
        </nav>
    </div>
    <div class="card-body">
        <div class="btn-toolbar mb-2" role="toolbar" aria-label="Toolbar with button groups">
            <div class="btn-group btn-group-sm me-2" role="group" aria-label="First group">
                @Html.AjaxActionLink("Rotate client secret", "RotateKeys", new { id = Model.Id, @type = "secret" }, new AjaxOptions
           {
               UpdateTargetId = "changeTenantInfo",
               Confirm = "Rotating the client secret may disrupt access for some applications. Are you sure you want to proceed?",
               OnSuccess = "onKeysGenerateSuccess"
           }, new { @class = "btn btn-outline-secondary", title = "Rotate client secret" })
                @Html.AjaxActionLink("Rotate api key", "RotateKeys", new { id = Model.Id, @type = "apikey" }, new AjaxOptions
           {
               UpdateTargetId = "changeTenantInfo",
               Confirm = "Rotating the api key may disrupt access for some applications. Are you sure you want to proceed?",
               OnSuccess = "onKeysGenerateSuccess"
           }, new { @class = "btn btn-outline-secondary", title = "Rotate api key" })
            </div>
            <div class="btn-group btn-group-sm me-2" role="group" aria-label="First group">
                @Html.AjaxActionLink($"Users ({Model.UsersCount})", "Unassign", new { id = Model.Id }, new AjaxOptions
           {
               UpdateTargetId = "changeTenantInfo",
               OnSuccess = "tenantEditFormLoaded"
           }, new { @class = "btn btn-outline-secondary", title = "View all users" })
                @Html.AjaxActionLink("Add users", "Assign", new { id = Model.Id }, new AjaxOptions
           {
               UpdateTargetId = "changeTenantInfo",
               OnSuccess = "tenantEditFormLoaded"
           }, new { @class = "btn btn-outline-secondary", title = "Add users" })
            </div>
        </div>

        @Html.DynamicContentLoader("basicInfo", Url.Action("BasicInfo", "Tenants", new { @id = Model.Id }))
        <hr class="my-3">
        @Html.DynamicContentLoader("securityInfo", Url.Action("Security", "Tenants", new { @id = Model.Id }))
        <hr class="my-3">
        @Html.DynamicContentLoader("themeInfo", Url.Action("Theme", "Tenants", new { @id = Model.Id }))
    </div>
</div>

<div id="changeTenantInfo"></div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
<script>
    var tenantEditCanvas, newKeysModal;

    function tenantEditFormLoaded() {
        tenantEditCanvas = new bootstrap.Offcanvas(document.getElementById('tenantEditOffcanvas'));
        tenantEditCanvas.show();
    }

    function onTenantChangeSuccess(e) {
        DynamicContentLoader.load('basicInfo');
        onTenantChange(e);
    }

    function onSecurityChangeSuccess(e) {
        DynamicContentLoader.load('securityInfo');
        onTenantChange(e);
    }

    function onThemeChangeSuccess(e) {
        DynamicContentLoader.load('themeInfo');
        onTenantChange(e);
    }

    function onTenantChange(e){
        tenantEditCanvas.hide();
        Toast.success(e.message);
    }

    function onKeysGenerateSuccess() {
        newKeysModal = new bootstrap.Modal(document.getElementById('keysModal'));
        newKeysModal.show();
    }

</script>