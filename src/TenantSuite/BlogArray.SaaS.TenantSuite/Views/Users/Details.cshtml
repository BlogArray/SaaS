@using System.Security.Claims
@{
    ViewData["Title"] = $"User > {Model.DisplayName}";
}

@model EditUserViewModel

<div class="card">
    <div class="card-header">
        <h3 class="mb-1">
            <img height="34" alt="profile icon" class="flex-shrink-0 me-1 rounded" loading="lazy" id="faviconImage" src="@Model.ProfileImage" />
            @Model.DisplayName
        </h3>
        <nav aria-label="breadcrumb mb-0 mbe-0 form-text">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item">
                    <a asp-action="Index">
                        All users
                    </a>
                </li>
                <li class="breadcrumb-item active" aria-current="page">@Model.DisplayName</li>
            </ol>
        </nav>
    </div>
    <div class="card-body">
        @Html.DynamicContentLoader("toolbar", Url.Action("Toolbar", "Users", new { @id = Model.Id }))
        @Html.DynamicContentLoader("basicInfo", Url.Action("BasicInfo", "Users", new { @id = Model.Id }))
        <hr class="my-3">
        <div class="d-flex align-items-center justify-content-between">
            <h5 class="mb-0">Assigned roles</h5>
            <div class="ms-auto">
                @Html.AjaxActionLink("Edit", "EditBasicInfo", "Users", new { @id = Model.Id }, new AjaxOptions
           {
               UpdateTargetId = "changeUserInfo",
               OnSuccess = "userEditFormLoaded"
           }, new { @class = "bi-mr bi bi-pencil btn btn-primary btn-sm" })
            </div>
        </div>
        <p>
            Assigned user roles
        </p>
    </div>
</div>

<div id="changeUserInfo"></div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

<script>
    var userEditCanvas;

    function userEditFormLoaded() {
        userEditCanvas = new bootstrap.Offcanvas(document.getElementById('userEditOffcanvas'));
        userEditCanvas.show();
    }

     function onUserChangeSuccess(e) {
        DynamicContentLoader.load('basicInfo');
        onUserChange(e);
    }

    function onUserChange(e){
        userEditCanvas.hide();
        Toast.success(e.message);
    }

    function changeState(e){
        DynamicContentLoader.load('toolbar');
        Toast.success(e.message);
    }
</script>