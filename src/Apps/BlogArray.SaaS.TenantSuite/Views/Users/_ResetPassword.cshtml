@model ResetPasswordViewModel

@using (Html.AjaxBeginForm(new AjaxOptions
 {
     Url = @Url.ActionLink("ResetPassword"),
     HttpMethod = "post",
     OnSuccess = "onUserChange",
     OnFailure = "handleAjaxError"
 }, new { id = "saveResetPasswordForm" }))
{
    <div class="offcanvas offcanvas-end medium" tabindex="-1" id="userEditOffcanvas" aria-labelledby="offcanvasRightLabel" data-bs-backdrop="static" data-bs-keyboard="false">
        <div class="offcanvas-header border-bottom">
            <h5 id="offcanvasRightLabel">
                Reset password for @Model.DisplayName
            </h5>
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">
            <input type="hidden" asp-for="Id" />
            <div class="form-check mb-3">
                <input class="form-check-input" type="radio" asp-for="CreatePassword" value="false" checked id="passwordLink" onclick="passwordClick()">
                <label class="form-check-label" for="passwordLink">
                    Create a link to change the password
                </label>
            </div>
            <div class="form-check mb-3">
                <input class="form-check-input" type="radio" asp-for="CreatePassword" value="true" id="customPassword" onclick="passwordClick()">
                <label class="form-check-label" for="customPassword">
                    Create a new password on behalf
                </label>
            </div>
            <div class="mb-3" id="passwordCtr" style="display:none">
                <label asp-for="Password" class="form-label">Password</label>
                <div class="input-group">
                    <input asp-for="Password" class="form-control">
                    <button class="btn btn-outline-secondary" type="button" data-bs-toggle="tooltip" data-bs-title="Show password" onclick="viewPwd(this)">
                        <i class="bi-eye"></i>
                        <i class="bi-eye-slash d-none"></i>
                    </button>
                    <button class="btn btn-outline-secondary" type="button" data-bs-toggle="tooltip" data-bs-title="Copy password" onclick="copyPassword()">
                        <i class="bi bi-copy"></i>
                    </button>
                    <button class="btn btn-outline-secondary" type="button" data-bs-toggle="tooltip" data-bs-title="Generate new password" onclick="generateNewPassword()">
                        <i class="bi bi-shuffle"></i>
                    </button>
                </div>
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
        </div>
        <div class="offcanvas-header border-top">
            <div>
                <input type="submit" value="Change password" class="btn btn-primary" />
                <input type="button" value="Cancel" class="btn btn-secondary" data-bs-dismiss="offcanvas" aria-label="Close" />
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        Unobtrusive.reInit($("#saveResetPasswordForm"));
    });

    function viewPwd(button) {
        const passwordInput = button.parentElement.querySelector('#Password');
        const showEye = button.querySelector('.bi-eye');
        const hideEye = button.querySelector('.bi-eye-slash');

        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            showEye.classList.add('d-none');
            hideEye.classList.remove('d-none');
            updateTooltip(button, 'Hide password')
        } else {
            passwordInput.type = 'password';
            showEye.classList.remove('d-none');
            hideEye.classList.add('d-none');
            updateTooltip(button, 'Show password')
        }
    }

    function passwordClick() {
        if ($("input[type='radio'][name='CreatePassword']:checked").val() == 'true') {
            $("#passwordCtr").show();
            generateNewPassword();
        } else {
            $("#passwordCtr").hide();
        }
    }

    function generateNewPassword() {
        $("#Password").val(AppCrypto.GeneratePassword());
    }

    function copyPassword() {
        ClipboardModule.copyText("Password", 'The password has been copied to your clipboard!', 'Failed to copy the client secret.');
    }
</script>
